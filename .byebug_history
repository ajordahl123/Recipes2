exit
x.click
x['href']==img_name
x['href']
x
exit
x['href'] == img_name
x['href']
c
x
exit
x['src'].include? "fav_bw.png"
x['src'].include? "fav_bw"
x['src']
x
find('.fav img')['src'].include? "bw"
find('.fav img')['src']
find('.fav img').with(src*='fav_bw')
find('fav img')
find('fav img').with(src*='fav_bw')
x['src']
x[src]
x = find('.fav img')
find('.fav img src')
find('.fav img')
find('.fav')
find('.img')
find(.img)
x
c
exit
find(:xpath, '//img[contains(@href, "#{img_name}")]')
exit
find('img[src="%#{img_name}%"]')
find('img[src="#%{img_name}%"]')
find('img[src="#{%img_name%}"]')
find('img[src="#{img_name}"]')
find('img[src = "#{img_name}"]')
find('img[src]')
find('img')
find('img[src*="#{img_name}"]')
c
exit
find('.fav img')
c
img_name
c
find_all('.fav img')
c
find_all('.fav img')
c
match
exit
eixt
c
find_all('.fav img')
find_all('.fav img').collect{|img| img['src'].include? img_name}
find_all('.fav img').collect{|img| img['src']}
find(:xpath, "//img[contains(@src, \"#{img_name}\")]").click
img_name
c
exit
find_all('.fav img').collect{|img| img['src']}
img_name
c
find(:xpath, "//img[contains(@src, \"#{img_name}\")]")
c
match
img_name
exit
img_name
c
exit
match
 find_all('.fav img')
find_all('.fav img').collect{|img| img['src']}
img_name
c
find(:xpath, "//img[contains(@src, \"#{img_name}\")]")
c
find_all('.fav img').collect{|img| img['src']}
img_name
exit
find_all('.fav img').collect{|img| img['src']}
img_name
c
find_all('.fav img').collect{|img| img['src']}
img_name
exit
find_all('.fav img').collect{|img| img['src']}
img_name
params
@favorited
@favorite
c
find_all('.fav img').collect{|img| img['src']}
img_name
exit
find_all('.fav img').collect{|img| img['src']}
img_name
c
@meal_type
c
prefs
@meal_type
c
exit
prefs
@recipe_name
c
@recipe_name
c
img_name
find_all('.fav img').collect{|img| img['src']}
exit
eixt
puts(image)
find_all('.fav img').collect{|img| img['src']}
find_all('.fav img')
c
User.where("email == ?", user_email)
User.where("email == ?", user_email).ids[0]
user_email
h["user_id"]
c
Recipe.create!(h)
h.values
h.keys
c
User.where("email == ?", user_email).ids[0]
user_email
c
user_email
Recipe.create!(h)
h["user_id"]
c
Recipe.create!(h)
h.values
h.keys
h["user_id"]
c
h["user_id"]
User.where("email == ?", user_email).ids[0]
user_email
c
@recipe
c
@meal_type
c
Recipe.destroy(3)
@recipes
Recipe.destroy(2)
@recipes
Recipe.destroy(1)
@recipes
<<<<<<< HEAD
cont
=======
exit
eixt
@user == @recipe.user
@user == @rcipe.user
@recipe.user
@recipe
@user
>>>>>>> ffc4dd470784ab4541e780f538ede50021fab109
continue
@recipes.join("reviews").select("recipes.id")
@recipes.join("reviews").select(recipes.id)
@recipes.join("reviews")
@recipes.join(:reviews)
continue
@recipes.order("reviews.length DESC")
Recipe.sort_by_most_reviewed
Recipe.sort_by_most_reviewe
Recipe.sort_by_most_reviews
@recipes
continue
@recipes.order("reviews.length DESC")
@recipes.order("reviews.length")
@recipes
continue
r[0].reviews.length
r[0].reviews
r[0]
r = Recipe.all
r = Recipes.all
Recipe[0]
Recipe.all
continue
<<<<<<< Updated upstream
c
s
session
c
params
session
c
do_redirect
c
session
params
c
exit
params
view_prefs
c
do_redirect
view_prefs
c
do_redirect
view_prefs
c
view_prefs
do_redirect
c
view_prefs
do_redirect
c
view_prefs
do_redirect
c
User.where(email: "test@colgate.edu")
h[:user_id]
h.keys
c
h.keys
h.delete("user_email")
h.keys
h.delete(:user_email)
h.values
h.keys
h.delete(:user_email)
h.values
h.keys
h.all
h
h[:user_id] = User.where(email: "test@colgate.edu").ids[0]
User.where(email: "test@colgate.edu").ids[0]
User.where(email: "test@colgate.edu").ids
User.where(email: "test@colgate.edu").email
User.where(email: "test@colgate.edu").id
User.where(email: "test@colgate.edu")
User.where(email: "test@colgate.edu").id
User.where(email: "test@colgate.edu").User id
User.where(email: "test@colgate.edu").user_id
User.where(email: "test@colgate.edu").id
User.all
(User.where(email: h[:user_email]))
(User.where(email: h.email))
table["user_email"]
table[user_email]
table
h.keys
h[recipe_name]
h.recipe_name
