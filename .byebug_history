cont
puts (@star/@numofreviews)/@count
puts (@star/@numofreviews)/@count)
@numofreviews
@star
@count
cont
puts @star
puts @count
cont
puts @star
cont
puts @star
cont
puts r.reviews.rating
puts r.reviews
puts rr.stars
puts @stars
puts @count
puts @stars.count
puts @stars
cont
bye
puts @recipe.name
puts @recipe.user.id
puts @recipe.user
cont
puts @count
cont
puts allrecipes.reviews
puts allrecipes.length
puts allrecipes
cont
puts allrecipes
cont
@recipe.user.id
@recipe.user.recipes
@recipe.user
@count
cont
puts @counts
cont
puts @recipe.user.email
puts @recipe.user.recipes.length
puts @recipe.user.recipe.length
cont
puts @recipe.user.recipes.length
puts @recipe.user.recipe.length
puts @recipe.user.email.recipes
puts @recipe.user.email
puts @recipe.user.name
puts @recipe.user.username
puts @recipe.user
cont
puts @user.recipes.count
puts @user.recipes
puts @user.recipes.each
cont
@recipe.user.recipes.length
@recipe.user.recipes.nil?
@recipe.user.recipes
@recipe.user
cont
puts @recipe.user.recipes.count
puts r
puts @user.recipes
puts @user.recipe
@recipe.user
@recipe.user.recipes
puts @recipe.user.recipes.each
cont
puts @count
puts @chefstatus
cont
puts @user.email
puts @user.name
puts @user.first
puts @user.username
puts @user.recipes.recipe_name
puts @user.recipes.name
puts @user.recipes
puts @user.recipe
@user.recipe
@user.recipes
inspect @user.recipes
puts @user.recipes
puts @user.email
puts @user.username
puts @user.name
cont
puts r.reviews
puts @star
cont
puts @user.recipes
puts @user.username
puts @user.name
cont
puts @star/@count
puts @count
puts @star
c
params
c
params
quit
exit
quit
c
quit
session
prefs
c
prefs
c
params[:vegetarian]
params
c
params
c
params
c
params
c
params
prefs["vegetarian_filter"]
@vegetarian
c
@vegetarian
c
Recipe.where(vegan:true)
c
Recipe.where(vegan:true)
continue
Recipe.joins(:reviews).group(:recipe_id).order("DESC")
Recipe.joins(:reviews).group(:recipe_id
Recipe.joins(:reviews)
continue
r.image.attached?
continue
r.image.attached?
continue
r.image.attached?
continue
r.image.attach
r.image
continue
r.image
r.image.has_attached?
r.image
r
continue
r
continue
r
exit
x.click
x['href']==img_name
x['href']
x
exit
x['href'] == img_name
x['href']
c
x
exit
x['src'].include? "fav_bw.png"
x['src'].include? "fav_bw"
x['src']
x
find('.fav img')['src'].include? "bw"
find('.fav img')['src']
find('.fav img').with(src*='fav_bw')
find('fav img')
find('fav img').with(src*='fav_bw')
x['src']
x[src]
x = find('.fav img')
find('.fav img src')
find('.fav img')
find('.fav')
find('.img')
find(.img)
x
c
exit
find(:xpath, '//img[contains(@href, "#{img_name}")]')
exit
find('img[src="%#{img_name}%"]')
find('img[src="#%{img_name}%"]')
find('img[src="#{%img_name%}"]')
find('img[src="#{img_name}"]')
find('img[src = "#{img_name}"]')
find('img[src]')
find('img')
find('img[src*="#{img_name}"]')
c
exit
find('.fav img')
c
img_name
c
find_all('.fav img')
c
find_all('.fav img')
c
match
exit
eixt
c
find_all('.fav img')
find_all('.fav img').collect{|img| img['src'].include? img_name}
find_all('.fav img').collect{|img| img['src']}
find(:xpath, "//img[contains(@src, \"#{img_name}\")]").click
img_name
c
exit
find_all('.fav img').collect{|img| img['src']}
img_name
c
find(:xpath, "//img[contains(@src, \"#{img_name}\")]")
c
match
img_name
exit
img_name
c
exit
match
 find_all('.fav img')
find_all('.fav img').collect{|img| img['src']}
img_name
c
find(:xpath, "//img[contains(@src, \"#{img_name}\")]")
c
find_all('.fav img').collect{|img| img['src']}
img_name
exit
find_all('.fav img').collect{|img| img['src']}
img_name
c
find_all('.fav img').collect{|img| img['src']}
img_name
exit
find_all('.fav img').collect{|img| img['src']}
img_name
params
@favorited
@favorite
c
find_all('.fav img').collect{|img| img['src']}
img_name
exit
find_all('.fav img').collect{|img| img['src']}
img_name
c
@meal_type
